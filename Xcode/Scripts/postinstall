#!/bin/bash

# Author:   Stephen Bygrave - Amsys
# Name:     postinstall
#
# Purpose:  Xcode Tools Postinstall to install extra components and command line
#           tools
# Usage:    Postinstall script within pkg file
#
# Version 1.0.0, 2017-07-12
#   Initial Creation

# Use at your own risk.  Amsys will accept no responsibility for loss or damage
# caused by this script.

# If running natively as a script, Add "-d or --debug" at run time to enable
# debugging messages.

if [[ "${1}" == --debug || "${1}" == -d ]];
then
    set +x
    debug=1
fi

##### Set variables

osVers=$(sw_vers -productVersion | awk -F "." '{print $2}')
cmdlineToolsTmp="/tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress"
logFile="/Library/Logs/Amsys_Installs.log"

##### Declare functions

writelog()
{
	/bin/echo "$(/bin/date) ${1}" >> "${logFile}"
	/bin/echo "${1}"
}

echoVariables ()
{
    writelog "OS Version is ${osVers}"
    writelog "Log file is saved at ${logFile}"
}

testExit ()
{
    if [[ $? -eq 0 ]];
    then
        exitCode="0"
    else
        exitCode="1"
    fi
}

testSuccess ()
{
    if [[ "${exitCode}" -ne "0" ]];
    then
        writelog "# Error while installing ${1}. Bailing..."
        exit 1
    else
        writelog "# ${1} installed."
    fi
}

enableSecurity ()
{
    # Enabling Development Tools Security
    writelog ""
    writelog "# Enabling Development Tools Security..."
    /usr/sbin/DevToolsSecurity -enable
    testExit
    writelog "# - Result is: ${exitCode}"
    writelog "# Accepting license..."
    /Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuild -license accept
    testExit
    writelog "# - Result is: ${exitCode}"
}

installCommandLineTools ()
{
    # Installing Command Line tools
    writelog ""
    writelog "# Installing Xcode command line Tools on 10.9.x or higher..."
    if [[ "${osVers}" -ge 9 ]];
    then

        # Create the placeholder file which is checked by the softwareupdate
        # tool before allowing the installation of the Xcode command line tools.
        touch "${cmdlineToolsTmp}"

        # Find the last listed update in the Software Update feed with "Command Line Tools" in the name
        cmdlineTools=$(softwareupdate -l | awk '/\*\ Command Line Tools/ { $1=$1;print }' | tail -1 | sed 's/^[[ \t]]*//;s/[[ \t]]*$//;s/*//' | cut -c 2-)

        # Install the command line tools
        writelog "# Installing via softwareupdate..."
        softwareupdate -i "${cmdlineTools}"
        testExit
        writelog "# - Result is: ${exitCode}"
        testSuccess "Command Line Tools"

        # Remove the temp file
        if [[ -f "${cmdlineToolsTmp}" ]];
        then
            rm "${cmdlineToolsTmp}"
        fi
    fi
}

grantAccess ()
{
    # Add everyone to Developer group
    writelog ""
    writelog "# Adding all users to Developer group..."
    /usr/sbin/dseditgroup -o edit -a everyone -t group _developer
    testExit
    writelog "# - Result is: ${exitCode}"

}

loadLaunchD ()
{
    # Loading LaunchDaemon to set off Additional Component installs
    writelog ""
    writelog "# Loading LaunchDaemon..."
    if [[ -e "/private/tmp/uk.co.amsys.Xcode.components.plist" ]];
    then
        /bin/launchctl load -w "/private/tmp/uk.co.amsys.Xcode.components.plist"
        testExit
        writelog "# - Result is: ${exitCode}"
    else
        writelog "# LaunchDaemon not found. Please install additional components manually."
    fi
}

##### Run script

if [[ ${debug} -eq 1 ]];
then
    writelog ""
    writelog "##### Debug Mode"
    writelog ""
    echoVariables
fi

writelog ""
writelog "##### Xcode Installer postinstall"
writelog ""

enableSecurity
installCommandLineTools
grantAccess
loadLaunchD
